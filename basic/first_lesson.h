#ifndef FIRST_LESSON_H
#define FIRST_LESSON_H

//ВВОДНЫЕ ЗАМЕЧАНИЯ

//Общее описание архитектуры компьютера
//Процессор, оперативная память, жесткий диск

//Адресация в оперативной памяти

//Кодирование информации. Биты, байты, таблицы кодировок. Представление чисел в памяти
//компьютера

//Хранение информации во вторичной памяти. Файловая структура.

//Выполнение инструкций процессором. Программа. Данные и алгоритмы.

//ЯЗЫКИ ПРОГРАММИРОВАНИЯ

//Высокоуровневые и низкоуровневые языки
//Самый низкий уровень - прямые инструкции процессору (машинный язык)
//Языки ассемблера - низкоуровневый язык
//Языки C, C++, Rust - языки, наиболее тесно взаимодействующие с железом.
//Языки Go, Python, JavaScript, Swift, Lisp - высокоуровневые языки

//Деление языков по основному способу организации кода - процедурные, функциональные и логические

//Деление языков по способу запуска - компилируемые и интерпретируемые.
//Компилятор, его назначение. Интерпретатор, его отличия от компилятора.
//Процесс трансляции

//Процесс сборки программ C++:

//1. Обработка заголовочных файлов и файлов исходных текстов препроцессором (препроцессинг).
//   Ошибки, возникающие на этом этапе.
//2. Трансляция файлов исходных текстов в машинные коды (получаются файлы *.o).
//   Ошибки, возникающие на этом этапе.
//3. Линковка объектных файлов в общий файл. Внутренние и внешние зависимости. Ошибки
//   линковки.

//Управление процессом сборки программ C++. make, cmake, MSBuild, clang
//Проекты, организация файлов в проекте Visual Studio.

// ОБЗОР ЯЗЫКА С++

//Характеристики языка. Наследие предшественников.
//Версионирование языка, современные возможности.
//Области применения языка. Основные библиотеки и фреймворки.

//Первая программа на языке C++.

#include <iostream>
using namespace std;
int main()
{
    //объявление трех переменных целочисленного типа
    int numberOfPods, peasPerPod, totalPeas;

    //вывод сообщения пользователю
    cout << "Press return after entering a number.\n";
    cout << "Enter the number of pods:\n";

    //считывание ввода пользователя
    cin >> numberOfPods;
    cout << "Enter the number of peas in a pod:\n";
    cin >> peasPerPod;

    //расчет
    totalPeas = numberOfPods * peasPerPod;

    //вывод результатов
    cout << "If you have "; //вывод строки 
    cout << numberOfPods; //вывод значения, содержащегося в переменной
    cout << " pea pods\n"; // \n означает перевод строки
    cout << "and ";
    cout << peasPerPod;
    cout << " peas in each pod, then\n";
    cout << "you have ";
    cout << totalPeas;
    cout << " peas in all the pods.\n";
    return  0; //завершение работы программы
}

//Задания

//1. Создайте новый проект консольной программы, замените текст в файле cpp текстом
//программы выше и скомпилируйте программу. Запустите программу и изучите ее работу.

//2. Проверка ошибок. По очереди попробуйте добавить следующие изменения в код программы из задания 1.
//Скомпилируйте программу. Изучите сообщение об ошибке. Исправьте ошибку и скомпилируйте программу снова.
//a. Добавьте пробел между < и словом iostream
//b. Удалите один из символов < или > из директивы include
//c. Удалите int из int main()
//d. Замените int в int main() на void
//e. Удалите или измените слово main
//f. Удалите одну из скобок (). Удалите обе скобки ()
//g. Удалите \n из любой строки, выводимой в консоль.
//h. Продолжайте вносить небольшие изменения в синтаксис. Удалите <<, точку с запятой, закрывающую }

//3. Напишите программу, которая спрашивает у пользователя два целых числа и выводит в
//консоль их сумму и разность.

//4. Обработка ошибок. Напишите программу, которая спрашивает у пользователя два целых
//числа и выводит их частное. При запуске программы попробуйте задать второе число равным 0.

//5. Изучение особенностей типов данных. Напишите программу, которая спрашивает
//у пользователя время падения мяча и выводит пройденное расстояние в свободном падении по формуле
// d = (g * t * t)/2
//Ускорение свободного падения g = 10
//При тестировании программы попробуйте задать различное время (0, 1, 3, 10) и посмотрите,
//какое значение будет выведено программой. Проверьте результат самостоятельным расчетом.




#endif // FIRST_LESSON_H
